package array

/*
给定一个数组 nums，编写一个函数将所有 0 移动到数组的末尾，同时保持非零元素的相对顺序。
请注意 ，必须在不复制数组的情况下原地对数组进行操作。

示例 1:
输入: nums = [0,1,0,3,12]
输出: [1,3,12,0,0]

示例 2:
输入: nums = [0]
输出: [0]
*/

func MoveZero(nums []int) {
	if len(nums) <= 1 {
		return
	}
	
	// 双指针法：i指向下一个非零元素应该放置的位置
	i := 0
	
	// j遍历整个数组，从0开始而不是1
	for j := 0; j < len(nums); j++ {
		if nums[j] != 0 {
			// 如果找到非零元素，放到位置i，然后i前进
			nums[i] = nums[j]
			// 如果i != j，说明原位置需要置零
			if i != j {
				nums[j] = 0
			}
			i++
		}
	}
}
